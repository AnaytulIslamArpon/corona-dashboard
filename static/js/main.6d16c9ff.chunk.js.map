{"version":3,"sources":["api.js","components/Table.jsx","components/Countries.jsx","components/Footer.jsx","assets/virus.svg","components/Header.jsx","components/Spinner.jsx","components/SummaryCards.jsx","components/SummaryGraphs.jsx","components/Summary.jsx","App.js","serviceWorker.js","index.js"],"names":["_callee","data","regenerator_default","a","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","Table","_ref","countries","react_default","createElement","className","cellPadding","cellSpacing","style","width","minWidth","length","sort","b","TotalConfirmed","map","row","i","key","numeral","format","src","concat","CountryCode","alt","Country","NewConfirmed","TotalDeaths","NewDeaths","TotalRecovered","colSpan","textAlign","Summary","countryFilter","react_fontawesome_index_es","icon","faFlagCheckered","faSearch","type","name","placeholder","onInput","bind","components_Table","Header","_extends","Object","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","virus_SvgVirus","svgRef","props","viewBox","ref","ForwardRef","forwardRef","__webpack_require__","p","Spinner","SummaryCards","SummaryGraphs","build","md","dist_default","animate","animationDuration","animationEasing","cx","cy","color","title","value","label","labelPosition","labelStyle","fontFamily","fontSize","lengthAngle","lineWidth","paddingAngle","radius","rounded","startAngle","height","viewBoxSize","totalValue","global","lastUpdate","Bangladesh","Fragment","faGlobe","Date","toDateString","components_SummaryCards","components_SummaryGraphs","faBox","filter","App","_React$useState","React","useState","_React$useState2","slicedToArray","loading","setLoading","_React$useState3","_React$useState4","error","setError","_React$useState5","Global","Countries","FilteredCountries","FilteredCountriesForBangladesh","undefined","_React$useState6","setData","useEffect","_getSummaryStats","getSummaryStats","then","res","objectSpread","item","catch","components_Header","components_Spinner","components_Summary","toLowerCase","Footer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.6d16c9ff.chunk.js","sourcesContent":["export async function getSummaryStats() {\r\n  const data = await fetch(\"https://api.covid19api.com/summary\");\r\n  return data.json();\r\n}\r\n","import numeral from \"numeral\";\r\nimport React from \"react\";\r\nimport \"./styles/Table.styles.scss\";\r\n\r\nconst Table = ({ countries }) => {\r\n  return (\r\n    <div className=\"table-wrapper\">\r\n      <table cellPadding=\"0\" cellSpacing=\"0\">\r\n        <thead>\r\n          <tr>\r\n            <th style={{ width: \"5%\" }}>#</th>\r\n            <th style={{ width: \"25%\", minWidth: \"150px\" }}>Country</th>\r\n            <th style={{ width: \"12%\" }}>Cases</th>\r\n            <th style={{ width: \"12%\" }}>New Cases</th>\r\n            <th style={{ width: \"12%\" }}>Deaths</th>\r\n            <th style={{ width: \"12%\" }}>New Deaths</th>\r\n            <th style={{ width: \"12%\" }}>Recovered</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {countries.length ? (\r\n            countries\r\n              .sort((a, b) => b.TotalConfirmed - a.TotalConfirmed)\r\n              .map((row, i) => {\r\n                return (\r\n                  <tr key={i}>\r\n                    <td>{numeral(i + 1).format(\"0,0\")}</td>\r\n                    <td>\r\n                      <img\r\n                        src={`https://www.countryflags.io/${row.CountryCode}/flat/32.png`}\r\n                        alt=\"\"\r\n                      />\r\n                      <span>{row.Country}</span>\r\n                    </td>\r\n                    <td>{numeral(row.TotalConfirmed).format(\"0,0\")}</td>\r\n                    <td>{numeral(row.NewConfirmed).format(\"0,0\")}</td>\r\n                    <td>{numeral(row.TotalDeaths).format(\"0,0\")}</td>\r\n                    <td>{numeral(row.NewDeaths).format(\"0,0\")}</td>\r\n                    <td>{numeral(row.TotalRecovered).format(\"0,0\")}</td>\r\n                  </tr>\r\n                );\r\n              })\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"6\" style={{ textAlign: \"center\" }}>\r\n                <span>No result found...</span>\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\nexport default Table;\r\n","import { faFlagCheckered, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport \"./styles/Countries.styles.scss\";\r\nimport Table from \"./Table\";\r\n\r\nconst Summary = ({ countries, countryFilter }) => {\r\n  return (\r\n    <div className=\"countries\">\r\n      <div className=\"container\">\r\n        <div className=\"section-title\">\r\n          <h6>\r\n            <FontAwesomeIcon icon={faFlagCheckered} /> <span>Countries</span>\r\n          </h6>\r\n          <div>\r\n            <div className=\"form-search\">\r\n              <FontAwesomeIcon icon={faSearch} />\r\n              <input\r\n                className=\"search-input\"\r\n                type=\"text\"\r\n                name=\"search\"\r\n                placeholder=\"Search\"\r\n                onInput={countryFilter.bind(this)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"info-box content\">\r\n          <Table countries={countries} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Summary;\r\n","import React from \"react\";\r\nimport \"./styles/Footer.styles.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <footer>\r\n      <div className=\"container\">\r\n        <p>\r\n          Developed by:{\" \"}\r\n          <a>\r\n            <strong>Md. Anaytul Islam Arpon</strong>\r\n          </a>{\" \"}\r\n          {/* - DataGridLimited */}\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\nexport default Header;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16 4C14.894531 4 14 4.894531 14 6C14 6.738281 14.402344 7.371094 15 7.71875L15 8.0625C13.195313 8.289063 11.570313 9.117188 10.34375 10.34375L8.96875 9.28125C8.980469 9.1875 9 9.097656 9 9C9 7.894531 8.105469 7 7 7C5.894531 7 5 7.894531 5 9C5 10.105469 5.894531 11 7 11C7.265625 11 7.519531 10.9375 7.75 10.84375L9.125 11.90625C8.410156 13.105469 8 14.507813 8 16C8 16.09375 7.996094 16.1875 8 16.28125C7.707031 16.109375 7.363281 16 7 16C5.894531 16 5 16.894531 5 18C5 19.105469 5.894531 20 7 20C7.691406 20 8.296875 19.65625 8.65625 19.125C8.925781 19.753906 9.273438 20.371094 9.6875 20.90625L8.5 22.0625C8.339844 22.019531 8.171875 22 8 22C6.894531 22 6 22.894531 6 24C6 25.105469 6.894531 26 8 26C9.105469 26 10 25.105469 10 24C10 23.828125 9.980469 23.660156 9.9375 23.5L11.09375 22.3125C11.832031 22.882813 12.6875 23.304688 13.59375 23.59375C13.230469 23.957031 13 24.449219 13 25C13 26.105469 13.894531 27 15 27C16.105469 27 17 26.105469 17 25C17 24.625 16.898438 24.269531 16.71875 23.96875C17.546875 23.894531 18.324219 23.683594 19.0625 23.375L20.21875 25.125C20.089844 25.390625 20 25.683594 20 26C20 27.105469 20.894531 28 22 28C23.105469 28 24 27.105469 24 26C24 24.894531 23.105469 24 22 24C21.957031 24 21.917969 23.996094 21.875 24L20.78125 22.375C21.683594 21.699219 22.449219 20.867188 23 19.875L24.03125 20.28125C24.167969 21.253906 24.992188 22 26 22C27.105469 22 28 21.105469 28 20C28 18.894531 27.105469 18 26 18C25.539063 18 25.121094 18.171875 24.78125 18.4375L23.71875 18C23.824219 17.589844 23.929688 17.179688 23.96875 16.75C24.585938 16.410156 25 15.753906 25 15C25 14.03125 24.316406 13.21875 23.40625 13.03125C23.222656 12.574219 22.980469 12.128906 22.71875 11.71875L23.5 10.9375C23.660156 10.980469 23.828125 11 24 11C25.105469 11 26 10.105469 26 9C26 7.894531 25.105469 7 24 7C22.894531 7 22 7.894531 22 9C22 9.171875 22.019531 9.339844 22.0625 9.5L21.4375 10.125C20.242188 9.019531 18.691406 8.277344 17 8.0625L17 7.71875C17.597656 7.371094 18 6.738281 18 6C18 4.894531 17.105469 4 16 4 Z M 16 10C19.324219 10 22 12.675781 22 16C22 19.324219 19.324219 22 16 22C12.675781 22 10 19.324219 10 16C10 12.675781 12.675781 10 16 10 Z M 14 13C13.449219 13 13 13.449219 13 14C13 14.550781 13.449219 15 14 15C14.550781 15 15 14.550781 15 14C15 13.449219 14.550781 13 14 13 Z M 19 15C17.894531 15 17 15.894531 17 17C17 18.105469 17.894531 19 19 19C20.105469 19 21 18.105469 21 17C21 15.894531 20.105469 15 19 15 Z M 15 18C14.449219 18 14 18.449219 14 19C14 19.550781 14.449219 20 15 20C15.550781 20 16 19.550781 16 19C16 18.449219 15.550781 18 15 18Z\"\n});\n\nvar SvgVirus = function SvgVirus(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 32 32\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgVirus, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/virus.00ce86c1.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport { ReactComponent as Virus } from \".././assets/virus.svg\";\r\nimport \"./styles/Header.styles.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <div className=\"container\">\r\n        <div className=\"title\">\r\n          <h1>\r\n            <Virus />\r\n            <span>Coronavirus Statistics</span>\r\n            <Virus />\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./styles/Spinner.styles.scss\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <div className=\"sk-chase\">\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Spinner;\r\n","import numeral from \"numeral\";\r\nimport React from \"react\";\r\nimport \"./styles/Summary.styles.scss\";\r\n\r\nconst SummaryCards = ({ TotalConfirmed, TotalDeaths, TotalRecovered }) => {\r\n  return (\r\n    <div className=\"info-box info\">\r\n      <div className=\"stat total-cases\">\r\n        <h4>Total Cases</h4>\r\n        <h1>{numeral(TotalConfirmed).format(\"0,0\")}</h1>\r\n      </div>\r\n      <div className=\"stat deaths\">\r\n        <h4>Deaths</h4>\r\n        <h1>{numeral(TotalDeaths).format(\"0,0\")}</h1>\r\n      </div>\r\n      <div className=\"stat recovered\">\r\n        <h4>Recovered</h4>\r\n        <h1>{numeral(TotalRecovered).format(\"0,0\")}</h1>\r\n      </div>\r\n      <div className=\"stat active\">\r\n        <h4>Active Cases</h4>\r\n        <h1>\r\n          {numeral(TotalConfirmed - TotalDeaths - TotalRecovered).format(\"0,0\")}\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SummaryCards;\r\n","import numeral from \"numeral\";\r\nimport React from \"react\";\r\nimport \"./styles/Summary.styles.scss\";\r\nimport ReactMinimalPieChart from \"react-minimal-pie-chart\";\r\nimport { Row, Col } from \"react-grid-system\";\r\n\r\nconst SummaryGraphs = ({ TotalConfirmed, TotalDeaths, TotalRecovered }) => {\r\n  return (\r\n    <div className=\"summaryGraph\">\r\n      <div className=\"container\">\r\n        <Row>\r\n          <Col md={6}>\r\n            <div className=\"info-box info\">\r\n              <div className=\"stat summary\">\r\n                <h4>Summary</h4>\r\n                <ReactMinimalPieChart\r\n                  animate\r\n                  animationDuration={500}\r\n                  animationEasing=\"ease-out\"\r\n                  cx={50}\r\n                  cy={50}\r\n                  data={[\r\n                    {\r\n                      color: \"#a2a89b\",\r\n                      title: \"Total Active\",\r\n                      value: TotalConfirmed - TotalDeaths - TotalRecovered,\r\n                    },\r\n                    {\r\n                      color: \"#e85b5b\",\r\n                      title: \"Total Deaths\",\r\n                      value: TotalDeaths,\r\n                    },\r\n                    {\r\n                      color: \"#65c109\",\r\n                      title: \"Total Recovered\",\r\n                      value: TotalRecovered,\r\n                    },\r\n                  ]}\r\n                  label\r\n                  labelPosition={112}\r\n                  labelStyle={{\r\n                    fontFamily: \"sans-serif\",\r\n                    fontSize: \"5px\",\r\n                  }}\r\n                  lengthAngle={360}\r\n                  lineWidth={100}\r\n                  paddingAngle={0}\r\n                  radius={42}\r\n                  rounded={false}\r\n                  startAngle={0}\r\n                  style={{\r\n                    height: \"300px\",\r\n                  }}\r\n                  viewBoxSize={[100, 100]}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col md={6}>\r\n            <div className=\"info-box info\">\r\n              <div className=\"stat active\">\r\n                <h4>Total Active Percent</h4>\r\n                <ReactMinimalPieChart\r\n                  animate\r\n                  animationDuration={500}\r\n                  animationEasing=\"ease-out\"\r\n                  cx={50}\r\n                  cy={50}\r\n                  data={[\r\n                    {\r\n                      title: \"Total Active Percent\",\r\n                      color: \"#E38627\",\r\n                      value: numeral(\r\n                        ((TotalConfirmed - TotalDeaths - TotalRecovered) /\r\n                          TotalConfirmed) *\r\n                          100\r\n                      ).format(\"0,0\"),\r\n                    },\r\n                  ]}\r\n                  label\r\n                  labelPosition={0}\r\n                  labelStyle={{\r\n                    fontFamily: \"sans-serif\",\r\n                    fontSize: \"25px\",\r\n                  }}\r\n                  lengthAngle={360}\r\n                  lineWidth={20}\r\n                  paddingAngle={0}\r\n                  radius={50}\r\n                  rounded={false}\r\n                  startAngle={0}\r\n                  style={{\r\n                    height: \"300px\",\r\n                  }}\r\n                  totalValue={100}\r\n                  viewBoxSize={[100, 100]}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SummaryGraphs;\r\n","import { faGlobe, faBox } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport \"./styles/Summary.styles.scss\";\r\nimport SummaryCards from \"./SummaryCards\";\r\nimport SummaryGraphs from \"./SummaryGraphs\";\r\n\r\nconst Summary = ({ global, lastUpdate, Bangladesh }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"summary\">\r\n        <div className=\"container\">\r\n          <div className=\"section-title\">\r\n            <h6>\r\n              <FontAwesomeIcon icon={faGlobe} /> <span>World Wide</span>\r\n            </h6>\r\n            {lastUpdate ? (\r\n              <p>Last updated: {new Date(lastUpdate).toDateString()}</p>\r\n            ) : null}\r\n          </div>\r\n\r\n          <SummaryCards\r\n            key=\"global\"\r\n            TotalConfirmed={global.TotalConfirmed}\r\n            TotalDeaths={global.TotalDeaths}\r\n            TotalRecovered={global.TotalRecovered}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <SummaryGraphs\r\n        key=\"global\"\r\n        TotalConfirmed={global.TotalConfirmed}\r\n        TotalDeaths={global.TotalDeaths}\r\n        TotalRecovered={global.TotalRecovered}\r\n      />\r\n\r\n      <div className=\"summary\">\r\n        <div className=\"container\">\r\n          <div className=\"section-title\">\r\n            <h6>\r\n              {/* <img src={`https://www.countryflags.io/BD/flat/32.png`} alt=\"\" /> */}\r\n              <FontAwesomeIcon icon={faBox} />\r\n              <span> BANGLADESH </span>\r\n            </h6>\r\n            {lastUpdate ? (\r\n              <p>Last updated: {new Date(lastUpdate).toDateString()}</p>\r\n            ) : null}\r\n          </div>\r\n          {Bangladesh.length ? (\r\n            Bangladesh.filter((row) => row.Country === \"Bangladesh\").map(\r\n              (row, i) => {\r\n                return (\r\n                  <SummaryCards\r\n                    key={i}\r\n                    TotalConfirmed={row.TotalConfirmed}\r\n                    TotalDeaths={row.TotalDeaths}\r\n                    TotalRecovered={row.TotalRecovered}\r\n                  />\r\n                );\r\n              }\r\n            )\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {Bangladesh.length ? (\r\n        Bangladesh.filter((row) => row.Country === \"Bangladesh\").map(\r\n          (row, i) => {\r\n            return (\r\n              <SummaryGraphs\r\n                key={i}\r\n                TotalConfirmed={row.TotalConfirmed}\r\n                TotalDeaths={row.TotalDeaths}\r\n                TotalRecovered={row.TotalRecovered}\r\n              />\r\n            );\r\n          }\r\n        )\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Summary;\r\n","import React from \"react\";\nimport { getSummaryStats } from \"./api\";\nimport Countries from \"./components/Countries\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport Spinner from \"./components/Spinner\";\nimport Summary from \"./components/Summary\";\nimport \"./main.scss\";\n\nfunction App() {\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState(false);\n\n  const [data, setData] = React.useState({\n    Global: {\n      TotalConfirmed: 0,\n      TotalDeaths: 0,\n      TotalRecovered: 0,\n    },\n    Countries: [],\n    FilteredCountries: [],\n    FilteredCountriesForBangladesh: [],\n    Date: undefined,\n  });\n\n  React.useEffect(() => {\n    getSummaryStats()\n      .then((res) => {\n        setData({\n          ...res,\n          FilteredCountries: res.Countries,\n          FilteredCountriesForBangladesh: res.Countries.filter(\n            (item) => item.Country === \"Bangladesh\"\n          ),\n        });\n        setLoading(false);\n      })\n      .catch(() => {\n        setLoading(false);\n        setError(true);\n      });\n  }, []);\n\n  const countryFilter = ({ target }) => {\n    setData({\n      ...data,\n      FilteredCountries: data.Countries.filter((item) => {\n        return (\n          item.Country.toLowerCase().indexOf(target.value.toLowerCase()) !== -1\n        );\n      }),\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <Header />\n      {error ? (\n        <div className=\"container flex-grow-1  p-5\">\n          <h2 style={{ textAlign: \"center\" }}>Error loading data!</h2>\n        </div>\n      ) : null}\n      {loading ? (\n        <div className=\"container flex-grow-1 \">\n          <Spinner />\n        </div>\n      ) : null}\n      {!error && !loading ? (\n        <div className=\"flex-grow-1\">\n          <Summary\n            global={data.Global}\n            lastUpdate={data.Date}\n            Bangladesh={data.FilteredCountriesForBangladesh}\n          />\n          <Countries\n            countries={data.FilteredCountries}\n            countryFilter={countryFilter}\n          />\n        </div>\n      ) : null}\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}